{"version":3,"sources":["../../../lib/endpoints/services/editorService.es6"],"names":["editorService","config","MongoDbService","repository_","req","Promise","resolve","reject","updateContent","body","Content","then","catch","err"],"mappings":"AAAA;;;;;;;;;AACA;;;;IACaA,a,WAAAA,a;AAET,2BAAYC,MAAZ,EAAoBC,cAApB,EAAoC;AAAA;;AAChC,aAAKD,MAAL,GAAcA,MAAd;AACA,aAAKE,WAAL,GAAmB,uCAAqBD,cAArB,CAAnB;AACH;;;;kCAESE,G,EAAI;AAAA;;AACV,mBAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,sBAAKJ,WAAL,CAAiBK,aAAjB,CAA+BJ,IAAIK,IAAJ,CAASC,OAAxC,EACCC,IADD,CACM,YAAM;AACRL;AACH,iBAHD,EAICM,KAJD,CAIO,eAAO;AACVL,2BAAOM,GAAP;AACH,iBAND;AAOH,aARM,CAAP;AASH","file":"editorService.js","sourcesContent":["\"use strict\";\nimport {EditorRepository} from \"../data-repositories/EditorRepository\";\nexport class editorService {\n\n    constructor(config, MongoDbService) {\n        this.config = config;\n        this.repository_ = new EditorRepository(MongoDbService);\n    }\n\n    storeToDb(req){\n        return new Promise((resolve, reject) => {\n            this.repository_.updateContent(req.body.Content)\n            .then(() => {\n                resolve();\n            })\n            .catch(err => {\n                reject(err);\n            });\n        });\n    }\n}\n"]}